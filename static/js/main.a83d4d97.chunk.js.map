{"version":3,"sources":["logo.svg","components/navbar.jsx","pages/about.jsx","components/gallery.jsx","components/factura.jsx","pages/home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","useState","isOpen","setIsOpen","Fragment","Navbar","className","dark","expand","to","src","logo","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","withRouter","about","Jumbotron","href","Component","Gallery","Container","CardGroup","this","getClassNone","Card","CardBody","CardImg","top","width","link","CardTitle","vendorName","CardText","style","height","overflow","textOverflow","Badge","color","totalVotes","undefined","titulo","getButtonC","vendorId","Button","size","onClickPress","block","e","classes","Factura","Row","Col","sm","md","vendedor","onRestart","facturaDate","facturaId","cliente","concursoName","concursoDescription","total","totalPago","home","form","getInitialState","items","search","vendedores","images","votos","ganadores","winner","vendedorId","handleRestart","a","setState","fetchItems","handleInputChange","target","name","value","handleButton","state","prevState","fetchWinner","handleSearcGoogle","length","window","gapi","client","setApiKey","fetchapi","load","then","cse","list","q","cx","num","searchType","response","result","err","console","error","fetchGapi","bind","id","identification","observations","status","isWinner","InputGroup","Input","placeholder","onChange","noValidate","InputGroupAddon","addonType","formatSearch","map","item","i","key","title","ListGroup","getClassListNone","Object","keys","ListGroupItem","pill","App","exact","path","component","Home","About","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a83d4d97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.eab1abc8.svg\";","import React, { useState } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem } from 'reactstrap';\r\nimport logo from '../../src/logo.svg';\r\n\r\nlet Navigation = props => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar className='navbar' dark expand='md'>\r\n        <NavLink to='/'>\r\n          <img src={logo} className='logo' alt='logo' />\r\n        </NavLink>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className='ml-auto' navbar>\r\n            <NavItem>\r\n              <NavLink to='/about' className='link'>\r\n                About\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\nNavigation = withRouter(Navigation);\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport { Jumbotron } from 'reactstrap';\r\n\r\nexport class about extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className='text-center m-3'>About me</h1>\r\n        <Jumbotron>\r\n          <h1 className='text-center display-3'>Hello, I'm Yesid!</h1>\r\n          <p className='lead'>\r\n            Esta es una pagina creada para alegra, Los vendedores de la empresa\r\n            “Imágenes del mundo” deben traer de la web imágenes relacionadas a\r\n            una palabra que el usuario ingresará en la aplicación, la imagen que\r\n            más le guste al usuario ganará 3 puntos, el vendedor que complete 20\r\n            puntos ganará la carrera, el codiciado premio es la posibilidad de\r\n            crear una factura en Alegra con los puntos acumulados por todos los\r\n            vendedores durante la carrera.\r\n          </p>\r\n          <hr className='my-2' />\r\n          <p>\r\n            contact me <a href='mailto:yesid.dev93@gmail.com'>Email</a>\r\n          </p>\r\n        </Jumbotron>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default about;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  CardGroup,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  CardBody,\r\n  Button,\r\n  Badge\r\n} from 'reactstrap';\r\n\r\nexport class Gallery extends Component {\r\n  render() {\r\n    return (\r\n      <Container className='mt-4'>\r\n        <CardGroup className={this.getClassNone()}>\r\n          <Card className='shadow'>\r\n            <CardBody>\r\n              <CardImg\r\n                top\r\n                width='100%'\r\n                src={this.props.link}\r\n                alt='imagensita'\r\n              />\r\n              <CardTitle className='text-center'>\r\n                Vendedor: <strong>{this.props.vendorName}</strong> <hr />\r\n              </CardTitle>\r\n              <CardText\r\n                className='text-info'\r\n                style={{\r\n                  height: '6rem',\r\n                  overflow: 'auto',\r\n                  textOverflow: 'ellipsis'\r\n                }}\r\n              >\r\n                {' '}\r\n                Votos totales:{' '}\r\n                <Badge color='secondary'>{this.props.totalVotes}</Badge>\r\n                {this.props.totalVotes === undefined && 0} <br />\r\n                {this.props.titulo}\r\n              </CardText>\r\n              <div className={this.getButtonC(this.props.vendorId)}>\r\n                <Button\r\n                  className='button'\r\n                  size='lg'\r\n                  onClick={() => this.props.onClickPress(this.props.vendorId)}\r\n                  block\r\n                >\r\n                  Vota!\r\n                </Button>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </CardGroup>\r\n      </Container>\r\n    );\r\n  }\r\n  // showing or not the element, depending on total votes\r\n  getButtonC(e) {\r\n    let classes = 'text-center';\r\n    classes += this.props.totalVotes > 20 ? ' empty' : '';\r\n    return classes;\r\n  }\r\n// showing or not the element, depending on link of images\r\n  getClassNone() {\r\n    let classes = 'm-2';\r\n    classes += this.props.link === undefined ? ' empty' : '';\r\n    return classes;\r\n  }\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { Component } from 'react';\r\nimport { Container, Button, Row, Col } from 'reactstrap';\r\nclass Factura extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className='m-4'>\r\n          <Col sm='12' md='6'>\r\n            <h1> Ganador {this.props.vendedor}!</h1>\r\n          </Col>\r\n          <Col sm='12' md='6'>\r\n            <Button className='float-right' onClick={this.props.onRestart}>\r\n              Reiniciar\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <div className='container'>\r\n          <div className='card'>\r\n            <div className='card-header'>\r\n              Factura:\r\n              <strong> {this.props.facturaDate}</strong>\r\n              <span className='float-right'>\r\n                {' '}\r\n                <strong>Stado:</strong> Factura {this.props.facturaId} pendiente\r\n              </span>\r\n            </div>\r\n            <div className='card-body'>\r\n              <div className='row mb-4'>\r\n                <div className='col-sm-6'>\r\n                  <h6 className='mb-3'>From:</h6>\r\n                  <div>\r\n                    <strong>Alegra</strong>\r\n                  </div>\r\n                  <div>Madalinskiego 8</div>\r\n                  <div>71-101 Szczecin, Poland</div>\r\n                  <div>Email: info@info.info</div>\r\n                  <div>Telefono: +48 444 666 3333</div>\r\n                </div>\r\n\r\n                <div className='col-sm-6'>\r\n                  <h6 className='mb-3'>To:</h6>\r\n                  <div>\r\n                    <strong>{this.props.cliente}</strong>\r\n                  </div>\r\n                  <div>Att: Yesid Gonzalez</div>\r\n                  <div>43-190 Mikolow, Poland</div>\r\n                  <div>Email: marek@daniel.com</div>\r\n                  <div>Telefono: +48 123 456 789</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='table-responsive-sm'>\r\n                <table className='table table-striped'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className='center'>#</th>\r\n                      <th>Item</th>\r\n                      <th>Descripcion</th>\r\n\r\n                      <th className='center'>Qty</th>\r\n                      <th className='right'>Total</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className='center'>1</td>\r\n                      <td className='left strong'>{this.props.concursoName}</td>\r\n                      <td className='left'>{this.props.concursoDescription}</td>\r\n\r\n                      <td className='right'>{this.props.total}</td>\r\n                      <td className='right'>${this.props.totalPago}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className='row'>\r\n                <div className='col-lg-4 col-sm-5'></div>\r\n\r\n                <div className='col-lg-4 col-sm-5 ml-auto'>\r\n                  <table className='table table-clear'>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className='left'>\r\n                          <strong>Subtotal</strong>\r\n                        </td>\r\n                        <td className='right'>${this.props.totalPago}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className='left'>\r\n                          <strong>Total</strong>\r\n                        </td>\r\n                        <td className='right'>\r\n                          <strong>${this.props.totalPago}</strong>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Factura;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Badge\r\n} from 'reactstrap';\r\n\r\nimport Gallery from '../components/gallery';\r\nimport Factura from '../components/factura';\r\n\r\n/* const fetch = require('node-fetch'); */\r\n\r\nexport default class home extends Component {\r\n  form = {};\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState();\r\n    this.handleRestart = this.handleRestart.bind(this);\r\n  }\r\n\r\n  // Saving the initial state of the component\r\n  getInitialState = () => {\r\n    const initialState = {\r\n      items: 0,\r\n      search: '',\r\n      vendedores: [],\r\n      images: [],\r\n      votos: 0,\r\n      ganadores: {},\r\n      winner: false,\r\n      vendedor: '',\r\n      cliente: '',\r\n      vendedorId: '',\r\n      concursoName: '',\r\n      concursoDescription: '',\r\n      facturaId: 0,\r\n      facturaDate: '',\r\n      totalPago: 0\r\n    };\r\n    return initialState;\r\n  };\r\n\r\n  // mount of the component\r\n  componentDidMount() {\r\n      const fetchItems = async () => {\r\n      /* const fetchItem = await fetch('https://api.alegra.com/api/v1/sellers/', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Basic eWVzaWQuZGV2OTNAZ21haWwuY29tOjgyOWFmMTg4ZWU1N2M3YWUyZjc4',\r\n          Accept: 'application/json'\r\n        }\r\n      });\r\n      const item = await fetchItem.json(); */\r\n      await this.setState({\r\n        vendedores: [\r\n          {\r\n            id: 1,\r\n            name: 'Yesid',\r\n            identification: '123456789',\r\n            observations: 'Observaciones del nuevo vendedor',\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'juanito',\r\n            identification: '',\r\n            observations: 'juanito es cool',\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 3,\r\n            name: 'Haroldo',\r\n            identification: '',\r\n            observations: 'Es buena persona y amable',\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 4,\r\n            name: 'Marianita',\r\n            identification: '',\r\n            observations: 'Es una buena niña',\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 5,\r\n            name: 'Heimer',\r\n            identification: '',\r\n            observations: 'Es muy inteligente',\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 6,\r\n            name: 'Paula',\r\n            identification: '',\r\n            observations: 'Es mas cool',\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 7,\r\n            name: 'Jen',\r\n            identification: '',\r\n            observations: 'Es amable aveces',\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 8,\r\n            name: 'Ferney',\r\n            identification: '',\r\n            observations: 'El chico pro',\r\n            status: 'active'\r\n          },\r\n          {\r\n            id: 9,\r\n            name: 'Test 1',\r\n            identification: '',\r\n            observations: '',\r\n            status: 'active'\r\n          }\r\n        ],\r\n        items: 9\r\n      });\r\n    };\r\n    fetchItems();\r\n  }\r\n\r\n  // Restarting the component with initial state\r\n  handleRestart = async () => {\r\n    await this.setState(this.getInitialState());\r\n    const fetchItems = async () => {\r\n      /* const fetchItem = await fetch('https://api.alegra.com/api/v1/sellers/', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Basic eWVzaWQuZGV2OTNAZ21haWwuY29tOjgyOWFmMTg4ZWU1N2M3YWUyZjc4',\r\n          Accept: 'application/json'\r\n        }\r\n      });\r\n      const item = await fetchItem.json(); */\r\n      await this.setState({\r\n        vendedores: [\r\n          {\r\n              \"id\": 1,\r\n              \"name\": \"Yesid\",\r\n              \"identification\": \"123456789\",\r\n              \"observations\": \"Observaciones del nuevo vendedor\",\r\n              \"status\": \"active\"\r\n          },\r\n          {\r\n              \"id\": 2,\r\n              \"name\": \"juanito\",\r\n              \"identification\": \"\",\r\n              \"observations\": \"juanito es cool\",\r\n              \"status\": \"active\"\r\n          },\r\n          {\r\n              \"id\": 3,\r\n              \"name\": \"Haroldo\",\r\n              \"identification\": \"\",\r\n              \"observations\": \"Es buena persona y amable\",\r\n              \"status\": \"active\"\r\n          },\r\n          {\r\n              \"id\": 4,\r\n              \"name\": \"Marianita\",\r\n              \"identification\": \"\",\r\n              \"observations\": \"Es una buena niña\",\r\n              \"status\": \"active\"\r\n          },\r\n          {\r\n              \"id\": 5,\r\n              \"name\": \"Heimer\",\r\n              \"identification\": \"\",\r\n              \"observations\": \"Es muy inteligente\",\r\n              \"status\": \"active\"\r\n          },\r\n          {\r\n              \"id\": 6,\r\n              \"name\": \"Paula\",\r\n              \"identification\": \"\",\r\n              \"observations\": \"Es mas cool\",\r\n              \"status\": \"active\"\r\n          },\r\n          {\r\n              \"id\": 7,\r\n              \"name\": \"Jen\",\r\n              \"identification\": \"\",\r\n              \"observations\": \"Es amable aveces\",\r\n              \"status\": \"active\"\r\n          },\r\n          {\r\n              \"id\": 8,\r\n              \"name\": \"Ferney\",\r\n              \"identification\": \"\",\r\n              \"observations\": \"El chico pro\",\r\n              \"status\": \"active\"\r\n          },\r\n          {\r\n              \"id\": 9,\r\n              \"name\": \"Test 1\",\r\n              \"identification\": \"\",\r\n              \"observations\": \"\",\r\n              \"status\": \"active\"\r\n          }\r\n      ],\r\n        items: 9\r\n      });\r\n    };\r\n    fetchItems();\r\n  };\r\n\r\n  // Input change on the search bar\r\n  handleInputChange = async e => {\r\n    this.form[e.target.name] = e.target;\r\n    await this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // handle the event of the button when there is a vote\r\n  handleButton = async e => {\r\n    if (this.state[e] === undefined) {\r\n      await this.setState(prevState => ({\r\n        [e]: 3,\r\n        ganadores: {\r\n          ...prevState.ganadores,\r\n          [e]: 3\r\n        }\r\n      }));\r\n    } else {\r\n      await this.setState(prevState => ({\r\n        [e]: 3 + this.state[e],\r\n        ganadores: {\r\n          ...prevState.ganadores,\r\n          [e]: 3 + this.state[e]\r\n        }\r\n      }));\r\n    }\r\n    await this.setState({\r\n      votos: this.state.votos + 3,\r\n      images: []\r\n    });\r\n    if (this.state[e] >= 20) {\r\n      const fetchWinner = async () => {\r\n        await this.setState({\r\n          winner: true\r\n        });\r\n        /* const data = {\r\n          date: '2019-10-29',\r\n          dueDate: '2019-11-11',\r\n          client: 1,\r\n          seller: e,\r\n          items: [\r\n            {\r\n              id: 1,\r\n              price: 120,\r\n              quantity: this.state.items,\r\n              description: 'Ganador Concurso Vendedores ¡a correr!'\r\n            }\r\n          ],\r\n          stamp: {\r\n            generateStamp: true\r\n          }\r\n        }; */\r\n       /*  const fetchPostFactura = await fetch(\r\n          `https://api.alegra.com/api/v1/invoices`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization:\r\n                'Basic eWVzaWQuZGV2OTNAZ21haWwuY29tOjgyOWFmMTg4ZWU1N2M3YWUyZjc4',\r\n              Accept: 'application/json'\r\n            }\r\n          }\r\n        );\r\n        const factura = await fetchPostFactura.json(); */\r\n        await this.setState({\r\n          facturaId: \"43\",\r\n          facturaDate: \"2016-02-03\",\r\n          vendedor: \"Yesid\",\r\n          cliente: \"Juanito\",\r\n          vendedorId: 1,\r\n          concursoName: \"Concurso Imagenes\",\r\n          concursoDescription: \"Camiseta talla S última colección\",\r\n          totalPago: 120\r\n        });\r\n      };\r\n      fetchWinner();\r\n    }\r\n  };\r\n\r\n  // Searching with google api\r\n  handleSearcGoogle = () => {\r\n    if (this.state.search && this.form['search'].value.length > 0) {\r\n      const fetchapi = async () => {\r\n        await window.gapi.client.setApiKey(\r\n          'AIzaSyArSIKvzwYs-4kBJ_Be4stqN08KvcNizts'\r\n        );\r\n      };\r\n      fetchapi();\r\n\r\n      const fetchGapi = async () => {\r\n        window.gapi.client\r\n          .load(\r\n            'https://content.googleapis.com/discovery/v1/apis/customsearch/v1/rest'\r\n          )\r\n          .then(\r\n            () => {\r\n              window.gapi.client.search.cse\r\n                .list({\r\n                  q: this.state.search,\r\n                  cx: '005215205933549556099:si9ryhbwt9j',\r\n                  num: this.state.items,\r\n                  searchType: 'image'\r\n                })\r\n                .then(\r\n                  response => {\r\n                    // Handle the results here (response.result has the parsed body).\r\n                    this.setState({\r\n                      images: response.result.items\r\n                    });\r\n                  },\r\n                  function(err) {\r\n                    console.error('Execute error', err);\r\n                  }\r\n                );\r\n            },\r\n            function(err) {\r\n              console.error('Error loading GAPI client for API', err);\r\n            }\r\n          );\r\n      };\r\n      fetchGapi();\r\n\r\n      this.form['search'].value = '';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const isWinner = this.state.winner;\r\n    return (\r\n      <Container className='mt-4'>\r\n        <p className='text-info text-center'>\r\n          Ingresa tu busqueda, haz click en buscar y escoge tu imagen favorita!\r\n        </p>\r\n        <InputGroup className='shadow-sm'>\r\n          <Input\r\n            placeholder='Ingresa una busqueda para encontrar imagenes'\r\n            name='search'\r\n            onChange={this.handleInputChange}\r\n            noValidate\r\n          />\r\n          <InputGroupAddon addonType='append'>\r\n            <Button className='button' onClick={this.handleSearcGoogle}>\r\n              Buscar\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n        <p className={this.getClassNone()}>{this.formatSearch()}</p>\r\n\r\n        {isWinner ? (\r\n          <Row>\r\n            <Factura\r\n              onRestart={this.handleRestart}\r\n              total={this.state.votos}\r\n              vendedor={this.state.vendedor}\r\n              cliente={this.state.vendedor}\r\n              vendedorId={this.state.vendedorId}\r\n              concursoName={this.state.concursoName}\r\n              concursoDescription={this.state.concursoDescription}\r\n              totalPago={this.state.totalPago}\r\n              facturaId={this.state.facturaId}\r\n              facturaDate={this.state.facturaDate}\r\n            />\r\n          </Row>\r\n        ) : (\r\n          <Container className={this.getClassNone()}>\r\n            <h1 className='text-center'>Gallery</h1>\r\n            <Row>\r\n              {this.state.images.map((item, i) => (\r\n                <Col key={i} sm='12' md='6'>\r\n                  <Gallery\r\n                    vendorId={this.state.vendedores[i].id}\r\n                    link={item.link}\r\n                    vendorName={this.state.vendedores[i].name}\r\n                    totalVotes={this.state[this.state.vendedores[i].id]}\r\n                    titulo={item.title}\r\n                    onClickPress={this.handleButton}\r\n                  />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Container>\r\n        )}\r\n        <ListGroup className={this.getClassListNone()}>\r\n          {Object.keys(this.state.ganadores).map(id => (\r\n            <ListGroupItem key={id} className='justify-content-between'>\r\n              Votos para vendedor {this.state.vendedores[id - 1].name}{' '}\r\n              <Badge color='dark' pill>\r\n                {this.state.ganadores[id]}\r\n              </Badge>\r\n              <br />\r\n              <p>\r\n                Faltan{' '}\r\n                {this.state.ganadores[id] < 20\r\n                  ? 20 - this.state.ganadores[id]\r\n                  : 0}{' '}\r\n                para ganar!\r\n              </p>\r\n            </ListGroupItem>\r\n          ))}\r\n          <ListGroupItem className='shadow'>\r\n            Total votos:{' '}\r\n            <Badge className='button' pill>\r\n              {this.state.votos}\r\n            </Badge>{' '}\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n  // showing or not the element, depending on images array\r\n  getClassNone() {\r\n    let classes = 'm-2';\r\n    classes += this.state.images.length === 0 ? ' empty' : '';\r\n    return classes;\r\n  }\r\n  // showing or not the element, depending on length of images array\r\n  getClassListNone() {\r\n    let classes = 'm-2';\r\n    classes += this.state.images.length > 0 ? ' empty' : '';\r\n    return classes;\r\n  }\r\n  // showing the actual number of vendors\r\n  formatSearch() {\r\n    const { items } = this.state;\r\n    return items === 0 ? '' : `Numero de concursantes: ${items}`;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport Navbar from './components/navbar';\r\nimport About from './pages/about';\r\nimport Home from './pages/home';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Navbar />\r\n        <Container>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/about' component={About} />\r\n        </Container>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}