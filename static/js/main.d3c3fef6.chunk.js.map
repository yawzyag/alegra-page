{"version":3,"sources":["logo.svg","components/navbar.jsx","pages/about.jsx","components/gallery.jsx","components/factura.jsx","pages/home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Example","props","useState","isOpen","setIsOpen","Fragment","Navbar","className","dark","expand","to","src","logo","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","withRouter","about","Component","Gallery","Container","CardGroup","this","getClassNone","Card","CardBody","CardImg","top","width","link","CardTitle","vendorName","CardText","style","height","overflow","textOverflow","totalVotes","undefined","titulo","getButtonC","vendorId","Button","size","onClickPress","block","e","classes","Factura","vendedor","onRestart","facturaDate","facturaId","cliente","concursoName","concursoDescription","total","totalPago","fetch","require","home","form","getInitialState","items","search","vendedores","images","votos","ganadores","winner","vendedorId","handleRestart","a","console","log","setState","state","method","headers","Authorization","Accept","fetchItem","json","item","fetchItems","handleInputChange","target","name","value","handleButton","prevState","data","date","dueDate","client","seller","id","price","quantity","description","stamp","generateStamp","body","JSON","stringify","fetchPostFactura","factura","invoice","fetchWinner","handleMytest","length","window","gapi","setApiKey","fetchapi","load","then","cse","list","q","cx","num","searchType","response","result","err","error","fetchGapi","bind","isWinner","InputGroup","Input","placeholder","onChange","noValidate","InputGroupAddon","addonType","formatSearch","Row","map","i","Col","key","sm","md","title","ListGroup","getClassListNone","Object","keys","ListGroupItem","Badge","color","pill","App","exact","path","component","Home","About","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3c3fef6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.eab1abc8.svg\";","import React, { useState } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem } from 'reactstrap';\r\nimport logo from '../../src/logo.svg';\r\n\r\nlet Example = props => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar className='navbar' dark expand='md'>\r\n        <NavLink to='/'>\r\n          <img src={logo} className='logo' alt='logo' />\r\n        </NavLink>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className='ml-auto' navbar>\r\n            <NavItem>\r\n              <NavLink to='/about' className='link'>\r\n                About\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\nExample = withRouter(Example);\r\nexport default Example;\r\n","import React, { Component } from 'react';\r\n\r\nexport class about extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>About me</h1>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default about;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  CardGroup,\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  CardBody,\r\n  Button\r\n} from 'reactstrap';\r\n\r\nexport class Gallery extends Component {\r\n  render() {\r\n    return (\r\n      <Container className='mt-4'>\r\n        <CardGroup className={this.getClassNone()}>\r\n          <Card>\r\n            <CardBody>\r\n              <CardImg\r\n                top\r\n                width='100%'\r\n                src={this.props.link}\r\n                alt='imagensita'\r\n              />\r\n              <CardTitle className='text-center'>\r\n                <p>Vendedor: <strong>{this.props.vendorName}</strong> </p>\r\n                <hr/>\r\n              </CardTitle>\r\n              <CardText\r\n                style={{ height: \"5rem\", overflow: 'auto', textOverflow: 'ellipsis' }}\r\n              >\r\n                {' '}\r\n                Votos totales: {this.props.totalVotes}\r\n                {this.props.totalVotes === undefined && 0} <br />\r\n                {this.props.titulo}\r\n              </CardText>\r\n              <div className={this.getButtonC(this.props.vendorId)}>\r\n                <Button\r\n                  className='button'\r\n                  size='lg'\r\n                  onClick={() => this.props.onClickPress(this.props.vendorId)}\r\n                  block\r\n                >\r\n                  Vota!\r\n                </Button>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </CardGroup>\r\n      </Container>\r\n    );\r\n  }\r\n  getButtonC(e) {\r\n    let classes = 'text-center';\r\n    classes += this.props.totalVotes > 20 ? ' empty' : '';\r\n    return classes;\r\n  }\r\n\r\n  getClassNone() {\r\n    let classes = 'm-2';\r\n    classes += this.props.link === undefined ? ' empty' : '';\r\n    return classes;\r\n  }\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { Component } from 'react';\r\nimport { Container, Button } from 'reactstrap';\r\nclass Factura extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1> Ganador {this.props.vendedor}!</h1>\r\n        <Button className='float-right' onClick={this.props.onRestart}>Reiniciar</Button>\r\n        <div className='container'>\r\n          <div className='card'>\r\n            <div className='card-header'>\r\n              Invoice:\r\n              <strong> {this.props.facturaDate}</strong>\r\n              <span className='float-right'>\r\n                {' '}\r\n                <strong>Status:</strong> Pending {this.props.facturaId}\r\n              </span>\r\n            </div>\r\n            <div className='card-body'>\r\n              <div className='row mb-4'>\r\n                <div className='col-sm-6'>\r\n                  <h6 className='mb-3'>From:</h6>\r\n                  <div>\r\n                    <strong>Alegra</strong>\r\n                  </div>\r\n                  <div>Madalinskiego 8</div>\r\n                  <div>71-101 Szczecin, Poland</div>\r\n                  <div>Email: info@info.info</div>\r\n                  <div>Phone: +48 444 666 3333</div>\r\n                </div>\r\n\r\n                <div className='col-sm-6'>\r\n                  <h6 className='mb-3'>To:</h6>\r\n                  <div>\r\n                    <strong>{this.props.cliente}</strong>\r\n                  </div>\r\n                  <div>Attn: Yesid Gonzalez</div>\r\n                  <div>43-190 Mikolow, Poland</div>\r\n                  <div>Email: marek@daniel.com</div>\r\n                  <div>Phone: +48 123 456 789</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='table-responsive-sm'>\r\n                <table className='table table-striped'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className='center'>#</th>\r\n                      <th>Item</th>\r\n                      <th>Description</th>\r\n\r\n                      <th className='center'>Qty</th>\r\n                      <th className='right'>Total</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className='center'>1</td>\r\n                      <td className='left strong'>{this.props.concursoName}</td>\r\n                      <td className='left'>{this.props.concursoDescription}</td>\r\n\r\n                      <td className='right'>{this.props.total}</td>\r\n                      <td className='right'>${this.props.totalPago}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className='row'>\r\n                <div className='col-lg-4 col-sm-5'></div>\r\n\r\n                <div className='col-lg-4 col-sm-5 ml-auto'>\r\n                  <table className='table table-clear'>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className='left'>\r\n                          <strong>Subtotal</strong>\r\n                        </td>\r\n                        <td className='right'>${this.props.totalPago}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className='left'>\r\n                          <strong>Total</strong>\r\n                        </td>\r\n                        <td className='right'>\r\n                          <strong>${this.props.totalPago}</strong>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Factura;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Badge\r\n} from 'reactstrap';\r\n\r\nimport Gallery from '../components/gallery';\r\nimport Factura from '../components/factura';\r\n\r\nconst fetch = require('node-fetch');\r\n\r\nexport default class home extends Component {\r\n  form = {};\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.getInitialState();\r\n    this.handleRestart = this.handleRestart.bind(this);\r\n  }\r\n\r\n  getInitialState = () => {\r\n    const initialState = {\r\n      items: 0,\r\n      search: '',\r\n      vendedores: [],\r\n      images: [],\r\n      votos: 0,\r\n      ganadores: {},\r\n      winner: false,\r\n      vendedor: '',\r\n      cliente: '',\r\n      vendedorId: '',\r\n      concursoName: '',\r\n      concursoDescription: '',\r\n      facturaId: 0,\r\n      facturaDate: '',\r\n      totalPago: 0\r\n    };\r\n    return initialState;\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log('mount');\r\n    const fetchItems = async () => {\r\n      const fetchItem = await fetch('https://api.alegra.com/api/v1/sellers/', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Basic eWVzaWQuZGV2OTNAZ21haWwuY29tOjgyOWFmMTg4ZWU1N2M3YWUyZjc4',\r\n          Accept: 'application/json'\r\n        }\r\n      });\r\n      const item = await fetchItem.json();\r\n      await this.setState({\r\n        vendedores: item,\r\n        items: 9\r\n      });\r\n    };\r\n    fetchItems();\r\n  }\r\n\r\n  handleRestart = async () => {\r\n    console.log(this.getInitialState());\r\n    \r\n    await this.setState(this.getInitialState());\r\n    console.log('mount');\r\n    console.log(this.state)\r\n    const fetchItems = async () => {\r\n      const fetchItem = await fetch('https://api.alegra.com/api/v1/sellers/', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization:\r\n            'Basic eWVzaWQuZGV2OTNAZ21haWwuY29tOjgyOWFmMTg4ZWU1N2M3YWUyZjc4',\r\n          Accept: 'application/json'\r\n        }\r\n      });\r\n      const item = await fetchItem.json();\r\n      await this.setState({\r\n        vendedores: item,\r\n        items: 9\r\n      });\r\n    };\r\n    fetchItems();\r\n  };\r\n\r\n  handleInputChange = async e => {\r\n    this.form[e.target.name] = e.target;\r\n    await this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleButton = async e => {\r\n    if (this.state[e] === undefined) {\r\n      await this.setState(prevState => ({\r\n        [e]: 3,\r\n        ganadores: {\r\n          ...prevState.ganadores,\r\n          [e]: 3\r\n        }\r\n      }));\r\n    } else {\r\n      await this.setState(prevState => ({\r\n        [e]: 3 + this.state[e],\r\n        ganadores: {\r\n          ...prevState.ganadores,\r\n          [e]: 3 + this.state[e]\r\n        }\r\n      }));\r\n    }\r\n    console.log(this.state.ganadores);\r\n    await this.setState({\r\n      votos: this.state.votos + 3,\r\n      images: []\r\n    });\r\n    if (this.state[e] >= 20) {\r\n      const fetchWinner = async () => {\r\n        const fetchItem = await fetch(\r\n          `https://api.alegra.com/api/v1/sellers/${e}`,\r\n          {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization:\r\n                'Basic eWVzaWQuZGV2OTNAZ21haWwuY29tOjgyOWFmMTg4ZWU1N2M3YWUyZjc4',\r\n              Accept: 'application/json'\r\n            }\r\n          }\r\n        );\r\n        const item = await fetchItem.json();\r\n        await this.setState({\r\n          winner: true\r\n        });\r\n        console.log(item.name, 'wins!');\r\n        const data = {\r\n          date: '2019-10-29',\r\n          dueDate: '2019-11-11',\r\n          client: 1,\r\n          seller: e,\r\n          items: [\r\n            {\r\n              id: 1,\r\n              price: 120,\r\n              quantity: this.state.items,\r\n              description: 'Ganador Concurso Vendedores ¡a correr!'\r\n            }\r\n          ],\r\n          stamp: {\r\n            generateStamp: true\r\n          }\r\n        };\r\n        const fetchPostFactura = await fetch(\r\n          `https://api.alegra.com/api/v1/invoices`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization:\r\n                'Basic eWVzaWQuZGV2OTNAZ21haWwuY29tOjgyOWFmMTg4ZWU1N2M3YWUyZjc4',\r\n              Accept: 'application/json'\r\n            }\r\n          }\r\n        );\r\n        const factura = await fetchPostFactura.json();\r\n        console.log(factura);\r\n        await this.setState({\r\n          facturaId: factura.invoice.id,\r\n          facturaDate: factura.invoice.date,\r\n          vendedor: factura.invoice.seller.name,\r\n          cliente: factura.invoice.client.name,\r\n          vendedorId: factura.invoice.seller.id,\r\n          concursoName: factura.invoice.items[0].name,\r\n          concursoDescription: factura.invoice.items[0].description,\r\n          totalPago: factura.invoice.items[0].total\r\n        });\r\n      };\r\n      fetchWinner();\r\n    }\r\n  };\r\n\r\n  handleMytest = () => {\r\n    if (this.state.search && this.form['search'].value.length > 0) {\r\n      const fetchapi = async () => {\r\n        await window.gapi.client.setApiKey(\r\n          'AIzaSyDazJWiT0pjLAghEGMtjeTegz7qQXC6d4U'\r\n        );\r\n      };\r\n      fetchapi();\r\n\r\n      const fetchGapi = async () => {\r\n        console.log(this.state.search);\r\n        window.gapi.client\r\n          .load(\r\n            'https://content.googleapis.com/discovery/v1/apis/customsearch/v1/rest'\r\n          )\r\n          .then(\r\n            () => {\r\n              console.log('GAPI client loaded for API');\r\n              window.gapi.client.search.cse\r\n                .list({\r\n                  q: this.state.search,\r\n                  cx: '005215205933549556099:si9ryhbwt9j',\r\n                  num: this.state.items,\r\n                  searchType: 'image'\r\n                })\r\n                .then(\r\n                  response => {\r\n                    // Handle the results here (response.result has the parsed body).\r\n                    this.setState({\r\n                      images: response.result.items\r\n                    });\r\n                    console.log('Response', this.state.images);\r\n                  },\r\n                  function(err) {\r\n                    console.error('Execute error', err);\r\n                  }\r\n                );\r\n            },\r\n            function(err) {\r\n              console.error('Error loading GAPI client for API', err);\r\n            }\r\n          );\r\n      };\r\n      fetchGapi();\r\n\r\n      this.form['search'].value = '';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const isWinner = this.state.winner;\r\n    return (\r\n      <Container className='mt-4'>\r\n        <InputGroup>\r\n          <Input\r\n            placeholder='Ingresa una busqueda para encontrar imagenes'\r\n            name='search'\r\n            onChange={this.handleInputChange}\r\n            noValidate\r\n          />\r\n          <InputGroupAddon addonType='append'>\r\n            <Button className='button' onClick={this.handleMytest}>\r\n              Buscar\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n        <p className={this.getClassNone()}>{this.formatSearch()}</p>\r\n\r\n        {isWinner ? (\r\n          <Row>\r\n            <Factura\r\n              onRestart={this.handleRestart}\r\n              total={this.state.votos}\r\n              vendedor={this.state.vendedor}\r\n              cliente={this.state.vendedor}\r\n              vendedorId={this.state.vendedorId}\r\n              concursoName={this.state.concursoName}\r\n              concursoDescription={this.state.concursoDescription}\r\n              totalPago={this.state.totalPago}\r\n              facturaId={this.state.facturaId}\r\n              facturaDate={this.state.facturaDate}\r\n            />\r\n          </Row>\r\n        ) : (\r\n          <Container className={this.getClassNone()}>\r\n            <h1 className='text-center'>Gallery</h1>\r\n            <Row>\r\n              {this.state.images.map((item, i) => (\r\n                <Col key={i} sm='12' md='6'>\r\n                  <Gallery\r\n                    vendorId={this.state.vendedores[i].id}\r\n                    link={item.link}\r\n                    vendorName={this.state.vendedores[i].name}\r\n                    totalVotes={this.state[this.state.vendedores[i].id]}\r\n                    titulo={item.title}\r\n                    onClickPress={this.handleButton}\r\n                  />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Container>\r\n        )}\r\n        <ListGroup className={this.getClassListNone()}>\r\n          {Object.keys(this.state.ganadores).map(id => (\r\n            <ListGroupItem key={id} className='justify-content-between'>\r\n              Vendedor {this.state.vendedores[id - 1].name}{' '}\r\n              <Badge color='dark' pill>\r\n                {this.state.ganadores[id]}\r\n              </Badge>\r\n            </ListGroupItem>\r\n          ))}\r\n          <ListGroupItem>\r\n            Total votos:{' '}\r\n            <Badge className='button' pill>\r\n              {this.state.votos}\r\n            </Badge>{' '}\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n  getClassNone() {\r\n    let classes = 'm-2';\r\n    classes += this.state.images.length === 0 ? ' empty' : '';\r\n    return classes;\r\n  }\r\n  getClassListNone() {\r\n    let classes = 'm-2';\r\n    classes += this.state.images.length > 0 ? ' empty' : '';\r\n    return classes;\r\n  }\r\n\r\n  formatSearch() {\r\n    const { items } = this.state;\r\n    return items === 0 ? '' : `Numero de concursantes: ${items}`;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport Navbar from './components/navbar';\r\nimport About from './pages/about';\r\nimport Home from './pages/home';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n            <Navbar />\r\n            <Container>\r\n              <Route exact path='/' component={Home} />\r\n              <Route path='/about' component={About} />\r\n            </Container>\r\n        </Router>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}